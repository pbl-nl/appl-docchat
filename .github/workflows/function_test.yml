name: Function Test
on:
  push:
    branches: [ main, unit-testing ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.11.9']
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'


    - name: Debug Environment Variables
      run: |
        echo "AZURE_OPENAI_ENDPOINT Length=${#AZURE_OPENAI_ENDPOINT}"
        echo "AZURE_ Length=${#AZURE_OPENAI_API_KEY}"
      env:
        AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
        AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
  

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install nltk
        pip install --upgrade pydantic
        python -m nltk.downloader punkt
        python -m nltk.downloader punkt_tab

    - name: Create .env file
      run: |
        touch .env
        echo "AZURE_OPENAI_API_KEY=${{ secrets.AZURE_OPENAI_API_KEY }}" >> .env
        echo "AZURE_OPENAI_LLM_DEPLOYMENT_NAME=${{ secrets.AZURE_OPENAI_LLM_DEPLOYMENT_NAME }}" >> .env
        echo "AZURE_OPENAI_ENDPOINT=${{ secrets.AZURE_OPENAI_ENDPOINT }}" >> .env
        echo "AZURE_OPENAI_EMB_DEPLOYMENT_NAME=${{ secrets.AZURE_OPENAI_EMB_DEPLOYMENT_NAME }}" >> .env
        echo "AZURE_OPENAI_API_VERSION=${{ secrets.AZURE_OPENAI_API_VERSION }}" >> .env

    - name: Verify .env file exists
      run: test -f .env || exit 1

    - name: Setup settings.py
      run: |
        if [ -f "settings_template.py" ]; then
          cp settings_template.py settings.py
        else
          echo "settings_template.py not found"
          exit 1
        fi

      
    - name: Update settings.py
      run: |
        if [ -f "settings.py" ]; then
          sed -i 's|ENVLOC = .*|ENVLOC = "${{ github.workspace }}"|' settings.py
          sed -i 's|AZURE_OPENAI_ENDPOINT = ".*"|AZURE_OPENAI_ENDPOINT = "${{ secrets.AZURE_OPENAI_ENDPOINT }}"|' settings.py
          sed -i 's|AZURE_OPENAI_API_VERSION = ".*"|AZURE_OPENAI_API_VERSION = "${{ secrets.AZURE_OPENAI_API_VERSION }}"|' settings.py
        else
          echo "settings.py not found after copying"
          exit 1
        fi



    - name: Update content_folder_path in unit_test function
      run: |
        if [ -f "tests/test_ingest_and_query.py" ]; then
          sed -i 's|content_folder_path = .*|content_folder_path = "${{ github.workspace }}/docs/unit_test_openai"|' tests/test_ingest_and_query.py
        else
          echo "tests/test_ingest_and_query.py not found"
          exit 1
        fi

    - name: Run tests
      run: python -m unittest discover tests
      env:
        PYTHONPATH: ${{ github.workspace }}
        AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
        AZURE_OPENAI_LLM_DEPLOYMENT_NAME: ${{ secrets.AZURE_OPENAI_LLM_DEPLOYMENT_NAME }}
        AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
        AZURE_OPENAI_EMB_DEPLOYMENT_NAME: ${{ secrets.AZURE_OPENAI_EMB_DEPLOYMENT_NAME }}
